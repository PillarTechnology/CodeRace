SERVER LAPTOP to allow racing (Pillar person):
  Pre-installations:
    1. Git client (Only required for cloning git)
      https://git-scm.com/book/en/v2/Getting-Started-Installing-Git
    2. Node.js and NPM
      https://docs.npmjs.com/getting-started/installing-node
        
  Setup:
    1. Clone CodeRace into local laptop:
      type: ‘git clone https://github.com/PillarTechnology/CodeRace.git'
    2. Determine IP of the laptop:
      type: ‘cd CodeRace’
      type: ‘ifconfig | grep 192’
      You will see something like: inet 192.168.11.247
      Write down the IP number starting with 192.

	Run:
    1. Run server: 
      type: ‘npm start’
    2. Signup users:
      Point browser to localhost:8081/signup
      sign up person 1 (set the dropdown to 1)
      sign up person 2 (set the dropdown to 2)
      ...
      sign up person 5 (set the dropdown to 5)
		3. Validate all users are signed up:
      Display leaderboard by showing localhost:8081

CLIENT LAPTOP to SETUP race (Pillar person):
  
  Pre-installations:
  1. Git client (Only required for cloning git)
    https://git-scm.com/book/en/v2/Getting-Started-Installing-Git
  2. Node.js and NPM
    https://docs.npmjs.com/getting-started/installing-node
  3. Gradle (If running race in Java)
    https://docs.gradle.org/current/userguide/installation.html
    
  Setup:
  1. Clone CodeRaceClients into local laptop:
    type: ‘git clone https://github.com/PillarTechnology/CodeRaceClients.git'
  2. Update IP to be that of the server machine:
    type: ‘cd CodeRaceClients’
    For JAVA:
      Edit romanNumeralsJava/build.gradle and change localhost to the 192.168… number
      // Replace RACER below with racer1, racer2, ... racer5, depending on which laptop
      type: ‘./setupRace.sh romanNumeralsJava RACER’
    For Javascript:
      Edit raceProgressPoster.js and change 127.0.0.1 to the 192.168… number
      // Replace RACER below with racer1, racer2, ... racer5, depending on which laptop
      type: ‘./setupRace.sh RomanNumeralsJS RACER’
  3. Laptop is now setup for the Race. 

	
CLIENT LAPTOP to ACTUALLY race (contestant):
  Steps:
  1. Open a new terminal window.
  2. Edit the source file to make the tests pass:
      For JAVA:
        type: ‘cd CodeRaceClients/romanNumeralsJava/src/main/java/com/coderace/‘
        edit the file RomanNumerals.java

      For JAVASCRIPT:
        type: ‘cd CodeRaceClients/RomanNumeralsJS/src’
        edit the file RomanNumerals.js
3. Save file changes -> tests will be run and server leader board will be updated

SERVER LAPTOP to Reset all players and start new race (Pillar person)
	Steps:	
    1. ctrl-c to stop the server
    2. type: ‘./cleanup.sh'
    3. type: ‘npm start’
    4. Confirm that all lanes are 0% and have default driver names
    5. sign up 5 new players
	
NOTE:
  These katas seem to work: RomanNumeralsJS, FizzBuzzJS, romanNumeralsJava, fizzBuzzJava 


TODO - JAVA AND JS: How do I know which acceptance tests are passing? Am I supposed to?
TODO - What should we see if gradle or something isn’t installed?
TODO - Add/finish instructions on what tools to install.

